#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
        };
    };

    macros {
        m_scrshot: MAC_SCREENSHOT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>;
            label = "MAC_SCREENSHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&ht TILDE TAB  &kp Q               &kp W       &kp E        &kp R       &kp T        &kp Y    &kp U       &kp I        &kp O       &kp P           &kp BSPC
&kp LCTRL      &ht LEFT_CONTROL A  &ht LALT S  &ht LSHFT D  &ht LGUI F  &kp G        &kp H    &ht RGUI J  &ht RSHFT K  &ht RALT L  &ht RCTRL SEMI  &kp SQT
&kp LSHFT      &kp Z               &kp X       &kp C        &kp V       &kp B        &kp N    &kp M       &kp COMMA    &kp DOT     &kp FSLH        &kp ESC
                                               &kp LGUI     &sl 1       &kp SPACE    &kp RET  &sl 2       &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3    &kp N4      &kp N5       &kp N6                    &kp N7        &kp N8         &kp N9                     &kp N0         &trans
&trans  &trans  &trans  &trans    &trans      &trans       &kp LEFT                  &kp DOWN      &kp UP         &kp RIGHT                  &kp PAGE_DOWN  &kp PAGE_UP
&trans  &trans  &trans  &trans    &kp LG(F3)  &kp F3       &kp LG(LS(LEFT_BRACKET))  &kp LG(DOWN)  &kp LA(LG(B))  &kp LS(LG(RIGHT_BRACKET))  &kp LC(T)      &kp LC(LA(D))
                        &kp LGUI  &trans      &kp SPACE    &kp RET                   &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT            &kp CARET       &kp AMPS       &kp ASTRK  &kp LPAR          &kp RPAR           &kp DEL
&trans  &kp LA(F7)  &kp LG(F6)  &kp LS(F6)  &kp F2      &kp LG(F12)          &kp MINUS       &kp PLUS       &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
&trans  &none       &none       &none       &m_scrshot  &kp LA(LC(SPACE))    &kp UNDERSCORE  &kp BACKSLASH  &kp TILDE  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans
                                &trans      &trans      &trans               &trans          &trans         &trans
            >;
        };

        bt {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_PRV  &bt BT_NXT         &trans           &trans      &trans       &kp C_MUTE
&trans      &trans        &trans        &trans        &trans        &trans          &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &trans       &trans
&sys_reset  &bootloader   &trans        &trans        &trans        &trans          &trans      &trans             &trans           &trans      &bootloader  &sys_reset
                                        &trans        &trans        &trans          &trans      &trans             &trans
            >;
        };
    };
};
